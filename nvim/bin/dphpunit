#!/bin/bash
# Customize the following:
containerName=$CONTAINER
phpunitPath=$REMOTE_PHPUNIT_BIN

echo "container name $containerName"
echo "path $phpunitPath"
# detect local path and remove from args
argsInput=${@}
runFile=$(echo $argsInput | awk '{print $1}')
phpTestPath=$(dirname "$runFile")
pushd $phpTestPath >/dev/null
projectPath="$(git rev-parse --show-toplevel)"
pushd >/dev/null

## detect test result output
for i in $argsInput; do
	case $i in
	--log-junit=*)
		outputPath="${i#*=}"
		;;
	*) ;;
	esac
done

# echo "Params: "${args[@]}
# echo "Docker: "$dockerPath
# echo "Local:  "$projectPath
# replace with local
args=("${argsInput/$projectPath\//}")

# replace strange line with (data set .*)
args=("${args//(*/}")

# Detect path
container=$(docker ps -n=-1 --filter name=$containerName --format="{{.ID}}")
dockerPath=$(docker inspect --format {{.Config.WorkingDir}} $container)

## debug
echo "Params: "${args[@]}
echo "Docker: "$dockerPath
# echo "Local:  "$projectPath
echo "Result: "$outputPath

# Run the tests
docker exec -i $container php -d memory_limit=-1 $phpunitPath ${args[@]}

echo "docker exec -i "$container" php -dxdebug.start_with_request=yes -d memory_limit=-1 "$phpunitPath" "${args[@]}

# copy results
docker cp -a "$container:$outputPath" "$outputPath" | - &>/dev/null

# replace docker path to locals
sed --in-place='_' "s#$dockerPath#$projectPath#g" $outputPath
